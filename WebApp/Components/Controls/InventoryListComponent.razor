@using CoreBusiness
@using UsesCases.Inventories.Interfaces

@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

@if (inventories != null && inventories.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var inventory in inventories)
            {
                <InventoryListItemComponent inventory="@inventory" />
            }
        </tbody>
    </table>
}
else if (inventories != null && !inventories.Any())
{
    <p>No inventories found for "<strong>@SearchInventoryFilter</strong>".</p>
}
else
{
    <p>Loading inventories...</p>
}

@code {
    [Parameter]
    public string? SearchInventoryFilter { get; set; }

    private IEnumerable<Inventory>? inventories;

    protected override async Task OnParametersSetAsync()
    {
        inventories = await ViewInventoriesByNameUseCase.Execute(SearchInventoryFilter ?? string.Empty);
    }
}
