@page "/editinventory/{invId:int}"
@using CoreBusiness
@using UsesCases.Inventories.interfaces

@inject IEditInventoryUseCase EditInventoryUseCase;
@inject NavigationManager NavigationManager;
@inject IGetInventoryUseCase GetInventoryUseCase;

<h3>Edit Inventory</h3>
<EditForm FormName="EditInventoryForm" Model="inventory" OnValidSubmit="Edit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText id="Name" class="form-control" @bind-Value="inventory.InventoryName" />
    </div>
    <div class="form-group">
        <label for="Quantity">Quantity</label>
        <InputNumber id="Quantity" class="form-control" @bind-Value="inventory.Quantity" />
    </div>
    <div class="form-group">
        <label for="Price">Price</label>
        <InputNumber id="Price" class="form-control" @bind-Value="inventory.Price" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <a href="/inventories" class="btn btn-secondary">Cancel</a>

</EditForm>
@code {


    [Parameter]
    public int invId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        inventory = await GetInventoryUseCase.Execute(invId);
    }
    private Inventory inventory = new Inventory();

    void Edit()
    {
        // Call the API to update the inventory
        EditInventoryUseCase.Execute(inventory);
        NavigationManager.NavigateTo("/inventories");

    }

}
